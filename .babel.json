{
  "{\"filename\":\"/app/bot.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/bot.js",
      "filenameRelative": "/app/bot.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "bot.js",
      "sourceFileName": "bot.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "bot"
    },
    "ignored": false,
    "code": "//\n// This is main file containing code implementing the Express server and functionality for the Express echo bot.\n//\n'use strict';\n\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst request = require('request');\nconst path = require('path');\nconst pug = require('pug');\nconst LinkedUserService = require('./LinkedUserService');\nconst HBLUsers = require('./HBLUsers');\n\nvar messengerButton = \"<html><head><title>Facebook Messenger Bot </title></head><body><h1>Facebook Messenger Bot By Mursil Sayed</h1>This is a bot based on Messenger Platform QuickStart. For more details, see their <a href=\\\"https://developers.facebook.com/docs/messenger-platform/guides/quick-start\\\">docs</a>.<footer id=\\\"gWidget\\\"></footer><script src=\\\"https://widget.glitch.me/widget.min.js\\\"></script></body></html>\";\n\n// The rest of the code implements the routes for our Express server.\nlet app = express();\napp.use(express.static('static')); //making the folder for static assets\napp.set('view engine', 'pug'); //setting the viewing engine to pug\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n\n//Variable for storing the User credentials for Linking\n//let redirect_uri ='';\n//let account_linking_token='';\n//let page_scopped_user_id ='';\nvar linkService = new LinkedUserService();\nvar HBLUserService = new HBLUsers();\n\n//let authorization_TOKEN =\"312ewqkdjwqdj21034e09483\";\n//let account_linked=false;\n\n//let linked_accounts=[];\nlet account_balance = 1000;\n\n//let linked_user_names ={};\n\n\napp.get('/testfilerendering', function (req, res) {\n  // Render a set of data\n  let redirect_uri = \"sample redirect uri\";\n  let account_linking_token = \"sample linking token\";\n\n  const page = pug.renderFile('views/user-identity.pug', { fbparams: { redirect_uri: redirect_uri, account_linking_token: account_linking_token } });\n  console.log(page);\n  res.send(page);\n});\n\napp.get('/testviewrendering', function (req, res) {\n  let redirect_uri = \"sample redirect uri\";\n  let account_linking_token = \"sample linking token\";\n\n  res.render('user-identity', { fbparams: { redirect_uri: redirect_uri, account_linking_token: account_linking_token } });\n});\n\napp.get('/login', function (req, res) {\n\n  //This method performs the following tasks\n  //1- It will save the recieved query parameters as hidden form fields\n  //2- It will create a template for Rendering Screen that will ask user to enter the userID and submit a button\n\n\n  //1- Saving query parameters in global var\n  let redirect_uri = req.query['redirect_uri'];\n  let account_linking_token = req.query['account_linking_token'];\n\n  //   redirect_uri =\"test url\";\n  //   account_linking_token = \"test_token\";\n\n\n  //2- It will create a template for Rendering Screen that will ask user to enter the userID and submit a button\n  res.render('login', { fbparams: { redirect_uri: redirect_uri, account_linking_token: account_linking_token } });\n});\n\napp.post('/auth', function (req, res) {\n\n  //This method performs the following tasks\n  //1- It will send an error message to the user that account is already linked. \n  //2- In case of successful authentication, It will call the redirect_url and pass an authorization_code token to it. In case of failure, it will also call the re-direct url but will not send the token\n\n\n  console.log(req.body);\n  let hblid = req.body.HBLID;\n  let fbparams = JSON.parse(req.body.fbparams);\n\n  console.log('HBLID=' + hblid);\n  console.log('fbparams=' + fbparams);\n  console.log('fbparams.redirect_uri=' + fbparams.redirect_uri);\n\n  let result = HBLUserService.isUserLinked(hblid);\n\n  if (result === false) {\n    console.log(\"Account Validation Successful. Calling redirect url\");\n    //Calling fb redirect\n\n    let requestPacket = {\n      uri: fbparams.redirect_uri + '&authorization_code=' + hblid,\n      method: 'GET'\n    };\n\n    console.log(\"Calling Redirect URL, request Packet URL:\" + requestPacket.uri);\n    res.redirect(requestPacket.uri);\n  } else if (result === true) {\n    console.log(hblid + ' is already linked with a facebook account');\n\n    res.status(200).send(hblid + ' is already linked with a facebook account');\n  } else // the account is already linked\n    {\n      console.log(result);\n      res.status(200).send(result);\n    }\n});\n\n// Webhook validation\napp.get('/webhook', function (req, res) {\n  if (req.query['hub.mode'] === 'subscribe' && req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);\n  }\n});\n\n// Display the web page\n// app.get('/', function(req, res) {\n\n\n//   res.writeHead(200, {'Content-Type': 'text/html'});\n//   res.write(loginHtml);\n//   res.end();\n\n\n// });\n\n\n// Message processing\napp.post('/webhook', function (req, res) {\n  console.log(req.body);\n  var data = req.body;\n\n  // Make sure this is a page subscription\n  if (data.object === 'page') {\n\n    // Iterate over each entry - there may be multiple if batched\n    data.entry.forEach(function (entry) {\n      var pageID = entry.id;\n      var timeOfEvent = entry.time;\n\n      // Iterate over each messaging event\n      entry.messaging.forEach(function (event) {\n        if (event.message) {\n          receivedMessage(event);\n        } else if (event.postback) {\n          receivedPostback(event);\n        } else if (event.account_linking) {\n          receivedAccountLinkingPostBack(event);\n        } else {\n          console.log(\"Webhook received unknown event: \", event);\n        }\n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know\n    // you've successfully received the callback. Otherwise, the request\n    // will time out and we will keep trying to resend.\n    res.sendStatus(200);\n  }\n});\n\n// Incoming events handling\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\", senderID, recipientID, timeOfMessage);\n  console.log(JSON.stringify(message));\n\n  var messageId = message.mid;\n\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n\n  if (messageText) {\n    // If we receive a text message, check to see if it matches a keyword\n    // and send back the template example. Otherwise, just echo the text we received.\n    switch (messageText) {\n      case 'generic':\n        sendGenericMessage(senderID);\n        break;\n      case 'login':\n        sendLoginButton(senderID, 'Please Connect Your HBL Mobile Account with chatbot');\n        break;\n      case 'account balance':\n        getAccountBalance(senderID);\n        break;\n\n      default:\n        sendTextMessage(senderID, messageText);\n    }\n  } else if (messageAttachments) {\n    sendTextMessage(senderID, \"Message with attachment received\");\n  }\n}\n\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback \n  // button for Structured Messages. \n  var payload = event.postback.payload;\n\n  console.log(\"Received postback for user %d and page %d with payload '%s' \" + \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n  sendTextMessage(senderID, \"Postback called\");\n}\n\nfunction receivedAccountLinkingPostBack(event) {\n\n  var senderPSID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  console.log(\"Received Account Linking Call back URL;\\n senderID=%s \\n status=%s \\n code=%s\", event.sender.id, event.account_linking.status, event.account_linking.authorization_code);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n  if (event.account_linking.status === 'linked') {\n    let hblid = event.account_linking.authorization_code;\n\n    linkService.linkHBLIDwithPSID(senderPSID, hblid);\n    HBLUserService.setUserLink(hblid);\n    sendTextMessage(senderPSID, \"Account Linked. Welcome \" + hblid + \"!\");\n  } else // unlink user Account\n    {\n      let hblid = linkService.getHBLID(senderPSID);\n      linkService.removeLink(senderPSID);\n      HBLUserService.setUserLink(hblid, false);\n      sendTextMessage(senderPSID, \"Account Unlinked for user \" + hblid);\n    }\n}\n\n//////////////////////////\n// Sending helpers\n//////////////////////////\n\nfunction getAccountBalance(recipientId) {\n\n  let hblid = linkService.getHBLID(recipientId);\n\n  if (hblid !== false) // Account linking found\n    {\n      //let hblid = linkService.getHBLID(recipientId);\n\n      let accessAllowed = HBLUserService.isFBAccessAllowedForThisUser(hblid);\n      let balance,\n          messageText = \"\";\n\n      if (accessAllowed === true) {\n        balance = HBLUserService.getAccountBalance(hblid);\n        messageText = 'Dear ' + hblid + \", your Account Balance is Rs.\" + balance;\n      } else messageText = 'Error! Dear ' + hblid + \" , \" + accessAllowed;\n\n      var messageData = {\n        recipient: {\n          id: recipientId\n        },\n        message: {\n          text: messageText\n        }\n      };\n\n      callSendAPI(messageData);\n    } else // Account is not linked\n    sendLoginButton(recipientId, 'To Access your Account Balance,Please login');\n}\n\nfunction sendTextMessage(recipientId, messageText) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      text: messageText\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction sendGenericMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"generic\",\n          elements: [{\n            title: \"rift\",\n            subtitle: \"Next-generation virtual reality\",\n            item_url: \"https://www.oculus.com/en-us/rift/\",\n            image_url: \"http://messengerdemo.parseapp.com/img/rift.png\",\n            buttons: [{\n              type: \"web_url\",\n              url: \"https://www.oculus.com/en-us/rift/\",\n              title: \"Open Web URL\"\n            }, {\n              type: \"postback\",\n              title: \"Call Postback\",\n              payload: \"Payload for first bubble\"\n            }]\n          }, {\n            title: \"touch\",\n            subtitle: \"Your Hands, Now in VR\",\n            item_url: \"https://www.oculus.com/en-us/touch/\",\n            image_url: \"http://messengerdemo.parseapp.com/img/touch.png\",\n            buttons: [{\n              type: \"web_url\",\n              url: \"https://www.oculus.com/en-us/touch/\",\n              title: \"Open Web URL\"\n            }, {\n              type: \"postback\",\n              title: \"Call Postback\",\n              payload: \"Payload for second bubble\"\n            }]\n          }]\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction sendLoginButton(recipientId, displayMessage) {\n\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"generic\",\n          elements: [{\n            title: \"HBL Mobile ChatBot\",\n            subtitle: displayMessage,\n\n            buttons: [{\n              \"type\": \"account_link\",\n              \"url\": \"https://quiver-territory.glitch.me/login\"\n            }, {\n              \"type\": \"account_unlink\"\n\n            }]\n\n          }]\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: process.env.PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      console.log(\"Successfully sent generic message with id %s to recipient %s\", messageId, recipientId);\n    } else {\n      console.error(\"Unable to send message.\");\n      console.error(response);\n      console.error(error);\n    }\n  });\n}\n\n// Set Express to listen out for HTTP requests\nvar server = app.listen(process.env.PORT || 3000, function () {\n  console.log(\"Listening on port %s\", server.address().port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvdC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJyZXF1ZXN0IiwicGF0aCIsInB1ZyIsIkxpbmtlZFVzZXJTZXJ2aWNlIiwiSEJMVXNlcnMiLCJtZXNzZW5nZXJCdXR0b24iLCJhcHAiLCJ1c2UiLCJzdGF0aWMiLCJzZXQiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwibGlua1NlcnZpY2UiLCJIQkxVc2VyU2VydmljZSIsImFjY291bnRfYmFsYW5jZSIsImdldCIsInJlcSIsInJlcyIsInJlZGlyZWN0X3VyaSIsImFjY291bnRfbGlua2luZ190b2tlbiIsInBhZ2UiLCJyZW5kZXJGaWxlIiwiZmJwYXJhbXMiLCJjb25zb2xlIiwibG9nIiwic2VuZCIsInJlbmRlciIsInF1ZXJ5IiwicG9zdCIsImJvZHkiLCJoYmxpZCIsIkhCTElEIiwiSlNPTiIsInBhcnNlIiwicmVzdWx0IiwiaXNVc2VyTGlua2VkIiwicmVxdWVzdFBhY2tldCIsInVyaSIsIm1ldGhvZCIsInJlZGlyZWN0Iiwic3RhdHVzIiwicHJvY2VzcyIsImVudiIsIlZFUklGWV9UT0tFTiIsImVycm9yIiwic2VuZFN0YXR1cyIsImRhdGEiLCJvYmplY3QiLCJlbnRyeSIsImZvckVhY2giLCJwYWdlSUQiLCJpZCIsInRpbWVPZkV2ZW50IiwidGltZSIsIm1lc3NhZ2luZyIsImV2ZW50IiwibWVzc2FnZSIsInJlY2VpdmVkTWVzc2FnZSIsInBvc3RiYWNrIiwicmVjZWl2ZWRQb3N0YmFjayIsImFjY291bnRfbGlua2luZyIsInJlY2VpdmVkQWNjb3VudExpbmtpbmdQb3N0QmFjayIsInNlbmRlcklEIiwic2VuZGVyIiwicmVjaXBpZW50SUQiLCJyZWNpcGllbnQiLCJ0aW1lT2ZNZXNzYWdlIiwidGltZXN0YW1wIiwic3RyaW5naWZ5IiwibWVzc2FnZUlkIiwibWlkIiwibWVzc2FnZVRleHQiLCJ0ZXh0IiwibWVzc2FnZUF0dGFjaG1lbnRzIiwiYXR0YWNobWVudHMiLCJzZW5kR2VuZXJpY01lc3NhZ2UiLCJzZW5kTG9naW5CdXR0b24iLCJnZXRBY2NvdW50QmFsYW5jZSIsInNlbmRUZXh0TWVzc2FnZSIsInRpbWVPZlBvc3RiYWNrIiwicGF5bG9hZCIsInNlbmRlclBTSUQiLCJhdXRob3JpemF0aW9uX2NvZGUiLCJsaW5rSEJMSUR3aXRoUFNJRCIsInNldFVzZXJMaW5rIiwiZ2V0SEJMSUQiLCJyZW1vdmVMaW5rIiwicmVjaXBpZW50SWQiLCJhY2Nlc3NBbGxvd2VkIiwiaXNGQkFjY2Vzc0FsbG93ZWRGb3JUaGlzVXNlciIsImJhbGFuY2UiLCJtZXNzYWdlRGF0YSIsImNhbGxTZW5kQVBJIiwiYXR0YWNobWVudCIsInR5cGUiLCJ0ZW1wbGF0ZV90eXBlIiwiZWxlbWVudHMiLCJ0aXRsZSIsInN1YnRpdGxlIiwiaXRlbV91cmwiLCJpbWFnZV91cmwiLCJidXR0b25zIiwidXJsIiwiZGlzcGxheU1lc3NhZ2UiLCJxcyIsImFjY2Vzc190b2tlbiIsIlBBR0VfQUNDRVNTX1RPS0VOIiwicmVzcG9uc2UiLCJzdGF0dXNDb2RlIiwicmVjaXBpZW50X2lkIiwibWVzc2FnZV9pZCIsInNlcnZlciIsImxpc3RlbiIsIlBPUlQiLCJhZGRyZXNzIiwicG9ydCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBTUEsVUFBVUMsUUFBUSxTQUFSLENBQWhCO0FBQ0EsTUFBTUMsYUFBYUQsUUFBUSxhQUFSLENBQW5CO0FBQ0EsTUFBTUUsVUFBVUYsUUFBUSxTQUFSLENBQWhCO0FBQ0EsTUFBTUcsT0FBT0gsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNSSxNQUFNSixRQUFRLEtBQVIsQ0FBWjtBQUNBLE1BQU1LLG9CQUFvQkwsUUFBUSxxQkFBUixDQUExQjtBQUNBLE1BQU1NLFdBQVdOLFFBQVEsWUFBUixDQUFqQjs7QUFFQSxJQUFJTyxrQkFBa0IsZ1pBQXRCOztBQUlBO0FBQ0EsSUFBSUMsTUFBTVQsU0FBVjtBQUNBUyxJQUFJQyxHQUFK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QUFtQkQ7O0FBRUQ7QUFDQSxJQUFJbUUsU0FBUzFHLElBQUkyRyxNQUFKLENBQVd2RSxRQUFRQyxHQUFSLENBQVl1RSxJQUFaLElBQW9CLElBQS9CLEVBQXFDLFlBQVk7QUFDNUQxRixVQUFRQyxHQUFSLENBQVksc0JBQVosRUFBb0N1RixPQUFPRyxPQUFQLEdBQWlCQyxJQUFyRDtBQUNELENBRlksQ0FBYiIsImZpbGUiOiJib3QuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbIi8vXG4vLyBUaGlzIGlzIG1haW4gZmlsZSBjb250YWluaW5nIGNvZGUgaW1wbGVtZW50aW5nIHRoZSBFeHByZXNzIHNlcnZlciBhbmQgZnVuY3Rpb25hbGl0eSBmb3IgdGhlIEV4cHJlc3MgZWNobyBib3QuXG4vL1xuJ3VzZSBzdHJpY3QnO1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuY29uc3QgcmVxdWVzdCA9IHJlcXVpcmUoJ3JlcXVlc3QnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBwdWcgPSByZXF1aXJlKCdwdWcnKTtcbmNvbnN0IExpbmtlZFVzZXJTZXJ2aWNlID0gcmVxdWlyZSgnLi9MaW5rZWRVc2VyU2VydmljZScpO1xuY29uc3QgSEJMVXNlcnMgPSByZXF1aXJlKCcuL0hCTFVzZXJzJyk7XG5cbnZhciBtZXNzZW5nZXJCdXR0b24gPSBcIjxodG1sPjxoZWFkPjx0aXRsZT5GYWNlYm9vayBNZXNzZW5nZXIgQm90IDwvdGl0bGU+PC9oZWFkPjxib2R5PjxoMT5GYWNlYm9vayBNZXNzZW5nZXIgQm90IEJ5IE11cnNpbCBTYXllZDwvaDE+VGhpcyBpcyBhIGJvdCBiYXNlZCBvbiBNZXNzZW5nZXIgUGxhdGZvcm0gUXVpY2tTdGFydC4gRm9yIG1vcmUgZGV0YWlscywgc2VlIHRoZWlyIDxhIGhyZWY9XFxcImh0dHBzOi8vZGV2ZWxvcGVycy5mYWNlYm9vay5jb20vZG9jcy9tZXNzZW5nZXItcGxhdGZvcm0vZ3VpZGVzL3F1aWNrLXN0YXJ0XFxcIj5kb2NzPC9hPi48Zm9vdGVyIGlkPVxcXCJnV2lkZ2V0XFxcIj48L2Zvb3Rlcj48c2NyaXB0IHNyYz1cXFwiaHR0cHM6Ly93aWRnZXQuZ2xpdGNoLm1lL3dpZGdldC5taW4uanNcXFwiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+XCI7XG5cblxuXG4vLyBUaGUgcmVzdCBvZiB0aGUgY29kZSBpbXBsZW1lbnRzIHRoZSByb3V0ZXMgZm9yIG91ciBFeHByZXNzIHNlcnZlci5cbmxldCBhcHAgPSBleHByZXNzKCk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdzdGF0aWMnKSk7Ly9tYWtpbmcgdGhlIGZvbGRlciBmb3Igc3RhdGljIGFzc2V0c1xuYXBwLnNldCgndmlldyBlbmdpbmUnLCAncHVnJyk7Ly9zZXR0aW5nIHRoZSB2aWV3aW5nIGVuZ2luZSB0byBwdWdcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe1xuICBleHRlbmRlZDogdHJ1ZVxufSkpO1xuXG5cbi8vVmFyaWFibGUgZm9yIHN0b3JpbmcgdGhlIFVzZXIgY3JlZGVudGlhbHMgZm9yIExpbmtpbmdcbi8vbGV0IHJlZGlyZWN0X3VyaSA9Jyc7XG4vL2xldCBhY2NvdW50X2xpbmtpbmdfdG9rZW49Jyc7XG4vL2xldCBwYWdlX3Njb3BwZWRfdXNlcl9pZCA9Jyc7XG52YXIgbGlua1NlcnZpY2UgPSBuZXcgTGlua2VkVXNlclNlcnZpY2UoKTtcbnZhciBIQkxVc2VyU2VydmljZSA9IG5ldyBIQkxVc2VycygpO1xuXG4vL2xldCBhdXRob3JpemF0aW9uX1RPS0VOID1cIjMxMmV3cWtkandxZGoyMTAzNGUwOTQ4M1wiO1xuLy9sZXQgYWNjb3VudF9saW5rZWQ9ZmFsc2U7XG5cbi8vbGV0IGxpbmtlZF9hY2NvdW50cz1bXTtcbmxldCBhY2NvdW50X2JhbGFuY2U9MTAwMDtcblxuLy9sZXQgbGlua2VkX3VzZXJfbmFtZXMgPXt9O1xuXG5cblxuICBcblxuXG5cbmFwcC5nZXQoJy90ZXN0ZmlsZXJlbmRlcmluZycsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gIC8vIFJlbmRlciBhIHNldCBvZiBkYXRhXG4gICAgIGxldCByZWRpcmVjdF91cmkgPVwic2FtcGxlIHJlZGlyZWN0IHVyaVwiO1xuICBsZXQgYWNjb3VudF9saW5raW5nX3Rva2VuID0gXCJzYW1wbGUgbGlua2luZyB0b2tlblwiO1xuICBcbiAgY29uc3QgcGFnZSA9IHB1Zy5yZW5kZXJGaWxlKCd2aWV3cy91c2VyLWlkZW50aXR5LnB1ZycseyBmYnBhcmFtczp7cmVkaXJlY3RfdXJpOiByZWRpcmVjdF91cmksIGFjY291bnRfbGlua2luZ190b2tlbjogYWNjb3VudF9saW5raW5nX3Rva2VuIH19KTtcbmNvbnNvbGUubG9nKHBhZ2UpO1xuICByZXMuc2VuZChwYWdlKTtcbiAgXG59KTtcblxuXG5hcHAuZ2V0KCcvdGVzdHZpZXdyZW5kZXJpbmcnLCBmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgIGxldCByZWRpcmVjdF91cmkgPVwic2FtcGxlIHJlZGlyZWN0IHVyaVwiO1xuICBsZXQgYWNjb3VudF9saW5raW5nX3Rva2VuID0gXCJzYW1wbGUgbGlua2luZyB0b2tlblwiO1xuICBcbiAgcmVzLnJlbmRlcigndXNlci1pZGVudGl0eScsIHsgZmJwYXJhbXM6e3JlZGlyZWN0X3VyaTogcmVkaXJlY3RfdXJpLCBhY2NvdW50X2xpbmtpbmdfdG9rZW46IGFjY291bnRfbGlua2luZ190b2tlbiB9IH0gKTtcbiAgXG59KTtcblxuXG5cbmFwcC5nZXQoJy9sb2dpbicsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG4gIFxuICAvL1RoaXMgbWV0aG9kIHBlcmZvcm1zIHRoZSBmb2xsb3dpbmcgdGFza3NcbiAgLy8xLSBJdCB3aWxsIHNhdmUgdGhlIHJlY2lldmVkIHF1ZXJ5IHBhcmFtZXRlcnMgYXMgaGlkZGVuIGZvcm0gZmllbGRzXG4gIC8vMi0gSXQgd2lsbCBjcmVhdGUgYSB0ZW1wbGF0ZSBmb3IgUmVuZGVyaW5nIFNjcmVlbiB0aGF0IHdpbGwgYXNrIHVzZXIgdG8gZW50ZXIgdGhlIHVzZXJJRCBhbmQgc3VibWl0IGEgYnV0dG9uXG4gIFxuICBcbiAgXG4gIFxuICAvLzEtIFNhdmluZyBxdWVyeSBwYXJhbWV0ZXJzIGluIGdsb2JhbCB2YXJcbiAgbGV0IHJlZGlyZWN0X3VyaSA9cmVxLnF1ZXJ5WydyZWRpcmVjdF91cmknXTtcbiAgbGV0IGFjY291bnRfbGlua2luZ190b2tlbiA9IHJlcS5xdWVyeVsnYWNjb3VudF9saW5raW5nX3Rva2VuJ107XG4gIFxuLy8gICByZWRpcmVjdF91cmkgPVwidGVzdCB1cmxcIjtcbi8vICAgYWNjb3VudF9saW5raW5nX3Rva2VuID0gXCJ0ZXN0X3Rva2VuXCI7XG4gIFxuICBcbiAgLy8yLSBJdCB3aWxsIGNyZWF0ZSBhIHRlbXBsYXRlIGZvciBSZW5kZXJpbmcgU2NyZWVuIHRoYXQgd2lsbCBhc2sgdXNlciB0byBlbnRlciB0aGUgdXNlcklEIGFuZCBzdWJtaXQgYSBidXR0b25cbiAgcmVzLnJlbmRlcignbG9naW4nLCB7IGZicGFyYW1zOntyZWRpcmVjdF91cmk6IHJlZGlyZWN0X3VyaSwgYWNjb3VudF9saW5raW5nX3Rva2VuOiBhY2NvdW50X2xpbmtpbmdfdG9rZW4gfSB9ICk7XG5cbiAgXG4gIFxuICBcbn0pO1xuXG4gICAgICAgICBcbmFwcC5wb3N0KCcvYXV0aCcsIGZ1bmN0aW9uKHJlcSwgcmVzKSB7XG5cbi8vVGhpcyBtZXRob2QgcGVyZm9ybXMgdGhlIGZvbGxvd2luZyB0YXNrc1xuICAvLzEtIEl0IHdpbGwgc2VuZCBhbiBlcnJvciBtZXNzYWdlIHRvIHRoZSB1c2VyIHRoYXQgYWNjb3VudCBpcyBhbHJlYWR5IGxpbmtlZC4gXG4gIC8vMi0gSW4gY2FzZSBvZiBzdWNjZXNzZnVsIGF1dGhlbnRpY2F0aW9uLCBJdCB3aWxsIGNhbGwgdGhlIHJlZGlyZWN0X3VybCBhbmQgcGFzcyBhbiBhdXRob3JpemF0aW9uX2NvZGUgdG9rZW4gdG8gaXQuIEluIGNhc2Ugb2YgZmFpbHVyZSwgaXQgd2lsbCBhbHNvIGNhbGwgdGhlIHJlLWRpcmVjdCB1cmwgYnV0IHdpbGwgbm90IHNlbmQgdGhlIHRva2VuXG4gIFxuIFxuICBjb25zb2xlLmxvZyhyZXEuYm9keSk7XG4gIGxldCBoYmxpZCA9cmVxLmJvZHkuSEJMSUQ7XG4gIGxldCBmYnBhcmFtcz0gSlNPTi5wYXJzZShyZXEuYm9keS5mYnBhcmFtcyk7XG4gIFxuICBjb25zb2xlLmxvZygnSEJMSUQ9JytoYmxpZCk7XG4gIGNvbnNvbGUubG9nKCdmYnBhcmFtcz0nK2ZicGFyYW1zKTtcbiAgY29uc29sZS5sb2coJ2ZicGFyYW1zLnJlZGlyZWN0X3VyaT0nK2ZicGFyYW1zLnJlZGlyZWN0X3VyaSk7XG4gIFxuICBsZXQgcmVzdWx0ID0gSEJMVXNlclNlcnZpY2UuaXNVc2VyTGlua2VkKGhibGlkKTtcbiAgXG4gIGlmKCByZXN1bHQgPT09IGZhbHNlKVxuICB7XG4gICAgICAgY29uc29sZS5sb2coXCJBY2NvdW50IFZhbGlkYXRpb24gU3VjY2Vzc2Z1bC4gQ2FsbGluZyByZWRpcmVjdCB1cmxcIik7XG4gICAgLy9DYWxsaW5nIGZiIHJlZGlyZWN0XG4gICAgXG4gICAgbGV0IHJlcXVlc3RQYWNrZXQgPSB7XG4gICAgdXJpOiBmYnBhcmFtcy5yZWRpcmVjdF91cmkrJyZhdXRob3JpemF0aW9uX2NvZGU9JytoYmxpZCxcbiAgICBtZXRob2Q6ICdHRVQnXG4gICAgfTtcblxuICAgIGNvbnNvbGUubG9nKFwiQ2FsbGluZyBSZWRpcmVjdCBVUkwsIHJlcXVlc3QgUGFja2V0IFVSTDpcIityZXF1ZXN0UGFja2V0LnVyaSk7XG4gICAgcmVzLnJlZGlyZWN0KHJlcXVlc3RQYWNrZXQudXJpKTtcbiAgICAgIFxuICB9ZWxzZSBpZihyZXN1bHQgPT09IHRydWUpXG4gICB7XG4gICAgIGNvbnNvbGUubG9nKGhibGlkKycgaXMgYWxyZWFkeSBsaW5rZWQgd2l0aCBhIGZhY2Vib29rIGFjY291bnQnKTtcblxuICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChoYmxpZCsnIGlzIGFscmVhZHkgbGlua2VkIHdpdGggYSBmYWNlYm9vayBhY2NvdW50Jyk7IFxuICAgfSBcbiAgZWxzZS8vIHRoZSBhY2NvdW50IGlzIGFscmVhZHkgbGlua2VkXG4gIHtcbiAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgcmVzLnN0YXR1cygyMDApLnNlbmQocmVzdWx0KTsgXG4gICAgXG4gIH1cbiAgXG4gIFxuIFxuICBcblxuICBcbiAgXG59KTtcblxuXG5cblxuXG5cblxuXG5cblxuXG5cbi8vIFdlYmhvb2sgdmFsaWRhdGlvblxuYXBwLmdldCgnL3dlYmhvb2snLCBmdW5jdGlvbihyZXEsIHJlcykge1xuICBpZiAocmVxLnF1ZXJ5WydodWIubW9kZSddID09PSAnc3Vic2NyaWJlJyAmJlxuICAgICAgcmVxLnF1ZXJ5WydodWIudmVyaWZ5X3Rva2VuJ10gPT09IHByb2Nlc3MuZW52LlZFUklGWV9UT0tFTikge1xuICAgIGNvbnNvbGUubG9nKFwiVmFsaWRhdGluZyB3ZWJob29rXCIpO1xuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHJlcS5xdWVyeVsnaHViLmNoYWxsZW5nZSddKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHZhbGlkYXRpb24uIE1ha2Ugc3VyZSB0aGUgdmFsaWRhdGlvbiB0b2tlbnMgbWF0Y2guXCIpO1xuICAgIHJlcy5zZW5kU3RhdHVzKDQwMyk7ICAgICAgICAgIFxuICB9XG59KTtcblxuLy8gRGlzcGxheSB0aGUgd2ViIHBhZ2Vcbi8vIGFwcC5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcykge1xuXG4gIFxuLy8gICByZXMud3JpdGVIZWFkKDIwMCwgeydDb250ZW50LVR5cGUnOiAndGV4dC9odG1sJ30pO1xuLy8gICByZXMud3JpdGUobG9naW5IdG1sKTtcbi8vICAgcmVzLmVuZCgpO1xuICBcbiAgXG5cblxuLy8gfSk7XG5cblxuLy8gTWVzc2FnZSBwcm9jZXNzaW5nXG5hcHAucG9zdCgnL3dlYmhvb2snLCBmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgY29uc29sZS5sb2cocmVxLmJvZHkpO1xuICB2YXIgZGF0YSA9IHJlcS5ib2R5O1xuXG4gIC8vIE1ha2Ugc3VyZSB0aGlzIGlzIGEgcGFnZSBzdWJzY3JpcHRpb25cbiAgaWYgKGRhdGEub2JqZWN0ID09PSAncGFnZScpIHtcbiAgICBcbiAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBlbnRyeSAtIHRoZXJlIG1heSBiZSBtdWx0aXBsZSBpZiBiYXRjaGVkXG4gICAgZGF0YS5lbnRyeS5mb3JFYWNoKGZ1bmN0aW9uKGVudHJ5KSB7XG4gICAgICB2YXIgcGFnZUlEID0gZW50cnkuaWQ7XG4gICAgICB2YXIgdGltZU9mRXZlbnQgPSBlbnRyeS50aW1lO1xuXG4gICAgICAvLyBJdGVyYXRlIG92ZXIgZWFjaCBtZXNzYWdpbmcgZXZlbnRcbiAgICAgIGVudHJ5Lm1lc3NhZ2luZy5mb3JFYWNoKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC5tZXNzYWdlKSB7XG4gICAgICAgICAgcmVjZWl2ZWRNZXNzYWdlKGV2ZW50KTtcbiAgICAgICAgfSBlbHNlIGlmIChldmVudC5wb3N0YmFjaykge1xuICAgICAgICAgIHJlY2VpdmVkUG9zdGJhY2soZXZlbnQpOyAgIFxuICAgICAgICB9IGVsc2UgaWYoZXZlbnQuYWNjb3VudF9saW5raW5nKVxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgcmVjZWl2ZWRBY2NvdW50TGlua2luZ1Bvc3RCYWNrKGV2ZW50KTsgICBcblxuICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwiV2ViaG9vayByZWNlaXZlZCB1bmtub3duIGV2ZW50OiBcIiwgZXZlbnQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8vIEFzc3VtZSBhbGwgd2VudCB3ZWxsLlxuICAgIC8vXG4gICAgLy8gWW91IG11c3Qgc2VuZCBiYWNrIGEgMjAwLCB3aXRoaW4gMjAgc2Vjb25kcywgdG8gbGV0IHVzIGtub3dcbiAgICAvLyB5b3UndmUgc3VjY2Vzc2Z1bGx5IHJlY2VpdmVkIHRoZSBjYWxsYmFjay4gT3RoZXJ3aXNlLCB0aGUgcmVxdWVzdFxuICAgIC8vIHdpbGwgdGltZSBvdXQgYW5kIHdlIHdpbGwga2VlcCB0cnlpbmcgdG8gcmVzZW5kLlxuICAgIHJlcy5zZW5kU3RhdHVzKDIwMCk7XG4gIH1cbn0pO1xuXG4vLyBJbmNvbWluZyBldmVudHMgaGFuZGxpbmdcbmZ1bmN0aW9uIHJlY2VpdmVkTWVzc2FnZShldmVudCkge1xuICB2YXIgc2VuZGVySUQgPSBldmVudC5zZW5kZXIuaWQ7XG4gIHZhciByZWNpcGllbnRJRCA9IGV2ZW50LnJlY2lwaWVudC5pZDtcbiAgdmFyIHRpbWVPZk1lc3NhZ2UgPSBldmVudC50aW1lc3RhbXA7XG4gIHZhciBtZXNzYWdlID0gZXZlbnQubWVzc2FnZTtcblxuICBjb25zb2xlLmxvZyhcIlJlY2VpdmVkIG1lc3NhZ2UgZm9yIHVzZXIgJWQgYW5kIHBhZ2UgJWQgYXQgJWQgd2l0aCBtZXNzYWdlOlwiLCBcbiAgICBzZW5kZXJJRCwgcmVjaXBpZW50SUQsIHRpbWVPZk1lc3NhZ2UpO1xuICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShtZXNzYWdlKSk7XG5cbiAgdmFyIG1lc3NhZ2VJZCA9IG1lc3NhZ2UubWlkO1xuXG4gIHZhciBtZXNzYWdlVGV4dCA9IG1lc3NhZ2UudGV4dDtcbiAgdmFyIG1lc3NhZ2VBdHRhY2htZW50cyA9IG1lc3NhZ2UuYXR0YWNobWVudHM7XG5cbiAgaWYgKG1lc3NhZ2VUZXh0KSB7XG4gICAgLy8gSWYgd2UgcmVjZWl2ZSBhIHRleHQgbWVzc2FnZSwgY2hlY2sgdG8gc2VlIGlmIGl0IG1hdGNoZXMgYSBrZXl3b3JkXG4gICAgLy8gYW5kIHNlbmQgYmFjayB0aGUgdGVtcGxhdGUgZXhhbXBsZS4gT3RoZXJ3aXNlLCBqdXN0IGVjaG8gdGhlIHRleHQgd2UgcmVjZWl2ZWQuXG4gICAgc3dpdGNoIChtZXNzYWdlVGV4dCkge1xuICAgICAgY2FzZSAnZ2VuZXJpYyc6XG4gICAgICAgIHNlbmRHZW5lcmljTWVzc2FnZShzZW5kZXJJRCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbG9naW4nOlxuICAgICAgICBzZW5kTG9naW5CdXR0b24oc2VuZGVySUQsJ1BsZWFzZSBDb25uZWN0IFlvdXIgSEJMIE1vYmlsZSBBY2NvdW50IHdpdGggY2hhdGJvdCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2FjY291bnQgYmFsYW5jZSc6XG4gICAgICAgIGdldEFjY291bnRCYWxhbmNlKHNlbmRlcklEKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICAgIFxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgc2VuZFRleHRNZXNzYWdlKHNlbmRlcklELCBtZXNzYWdlVGV4dCk7XG4gICAgfVxuICB9IGVsc2UgaWYgKG1lc3NhZ2VBdHRhY2htZW50cykge1xuICAgIHNlbmRUZXh0TWVzc2FnZShzZW5kZXJJRCwgXCJNZXNzYWdlIHdpdGggYXR0YWNobWVudCByZWNlaXZlZFwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZWNlaXZlZFBvc3RiYWNrKGV2ZW50KSB7XG4gIHZhciBzZW5kZXJJRCA9IGV2ZW50LnNlbmRlci5pZDtcbiAgdmFyIHJlY2lwaWVudElEID0gZXZlbnQucmVjaXBpZW50LmlkO1xuICB2YXIgdGltZU9mUG9zdGJhY2sgPSBldmVudC50aW1lc3RhbXA7XG5cbiAgLy8gVGhlICdwYXlsb2FkJyBwYXJhbSBpcyBhIGRldmVsb3Blci1kZWZpbmVkIGZpZWxkIHdoaWNoIGlzIHNldCBpbiBhIHBvc3RiYWNrIFxuICAvLyBidXR0b24gZm9yIFN0cnVjdHVyZWQgTWVzc2FnZXMuIFxuICB2YXIgcGF5bG9hZCA9IGV2ZW50LnBvc3RiYWNrLnBheWxvYWQ7XG5cbiAgY29uc29sZS5sb2coXCJSZWNlaXZlZCBwb3N0YmFjayBmb3IgdXNlciAlZCBhbmQgcGFnZSAlZCB3aXRoIHBheWxvYWQgJyVzJyBcIiArIFxuICAgIFwiYXQgJWRcIiwgc2VuZGVySUQsIHJlY2lwaWVudElELCBwYXlsb2FkLCB0aW1lT2ZQb3N0YmFjayk7XG5cbiAgLy8gV2hlbiBhIHBvc3RiYWNrIGlzIGNhbGxlZCwgd2UnbGwgc2VuZCBhIG1lc3NhZ2UgYmFjayB0byB0aGUgc2VuZGVyIHRvIFxuICAvLyBsZXQgdGhlbSBrbm93IGl0IHdhcyBzdWNjZXNzZnVsXG4gIHNlbmRUZXh0TWVzc2FnZShzZW5kZXJJRCwgXCJQb3N0YmFjayBjYWxsZWRcIik7XG59XG5cblxuZnVuY3Rpb24gcmVjZWl2ZWRBY2NvdW50TGlua2luZ1Bvc3RCYWNrKGV2ZW50KSB7XG4gIFxuICB2YXIgc2VuZGVyUFNJRCA9IGV2ZW50LnNlbmRlci5pZDtcbiAgdmFyIHJlY2lwaWVudElEID0gZXZlbnQucmVjaXBpZW50LmlkO1xuICB2YXIgdGltZU9mUG9zdGJhY2sgPSBldmVudC50aW1lc3RhbXA7XG5cbiAgY29uc29sZS5sb2coXCJSZWNlaXZlZCBBY2NvdW50IExpbmtpbmcgQ2FsbCBiYWNrIFVSTDtcXG4gc2VuZGVySUQ9JXMgXFxuIHN0YXR1cz0lcyBcXG4gY29kZT0lc1wiLGV2ZW50LnNlbmRlci5pZCwgZXZlbnQuYWNjb3VudF9saW5raW5nLnN0YXR1cywgZXZlbnQuYWNjb3VudF9saW5raW5nLmF1dGhvcml6YXRpb25fY29kZSk7XG5cbiAgLy8gV2hlbiBhIHBvc3RiYWNrIGlzIGNhbGxlZCwgd2UnbGwgc2VuZCBhIG1lc3NhZ2UgYmFjayB0byB0aGUgc2VuZGVyIHRvIFxuICAvLyBsZXQgdGhlbSBrbm93IGl0IHdhcyBzdWNjZXNzZnVsXG4gIGlmKGV2ZW50LmFjY291bnRfbGlua2luZy5zdGF0dXMgPT09J2xpbmtlZCcpXG4gIHtcbiAgICBsZXQgaGJsaWQgPSBldmVudC5hY2NvdW50X2xpbmtpbmcuYXV0aG9yaXphdGlvbl9jb2RlO1xuXG4gICAgbGlua1NlcnZpY2UubGlua0hCTElEd2l0aFBTSUQoc2VuZGVyUFNJRCxoYmxpZCk7XG4gICAgSEJMVXNlclNlcnZpY2Uuc2V0VXNlckxpbmsoaGJsaWQpO1xuICAgIHNlbmRUZXh0TWVzc2FnZShzZW5kZXJQU0lELCBcIkFjY291bnQgTGlua2VkLiBXZWxjb21lIFwiK2hibGlkK1wiIVwiKTtcbiAgfVxuICBlbHNlIC8vIHVubGluayB1c2VyIEFjY291bnRcbiAge1xuICAgIGxldCBoYmxpZCA9IGxpbmtTZXJ2aWNlLmdldEhCTElEKHNlbmRlclBTSUQpO1xuICAgIGxpbmtTZXJ2aWNlLnJlbW92ZUxpbmsoc2VuZGVyUFNJRCk7XG4gICAgSEJMVXNlclNlcnZpY2Uuc2V0VXNlckxpbmsoaGJsaWQsZmFsc2UpO1xuICAgIHNlbmRUZXh0TWVzc2FnZShzZW5kZXJQU0lELCBcIkFjY291bnQgVW5saW5rZWQgZm9yIHVzZXIgXCIraGJsaWQpO1xuICB9XG5cbiAgXG59XG5cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBTZW5kaW5nIGhlbHBlcnNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmZ1bmN0aW9uIGdldEFjY291bnRCYWxhbmNlKHJlY2lwaWVudElkKSB7XG4gIFxuICBsZXQgaGJsaWQgPSBsaW5rU2VydmljZS5nZXRIQkxJRChyZWNpcGllbnRJZCk7XG4gIFxuICBcbiAgaWYoaGJsaWQhPT1mYWxzZSkvLyBBY2NvdW50IGxpbmtpbmcgZm91bmRcbiAge1xuICAgIC8vbGV0IGhibGlkID0gbGlua1NlcnZpY2UuZ2V0SEJMSUQocmVjaXBpZW50SWQpO1xuICAgIFxuICAgIGxldCBhY2Nlc3NBbGxvd2VkID0gSEJMVXNlclNlcnZpY2UuaXNGQkFjY2Vzc0FsbG93ZWRGb3JUaGlzVXNlcihoYmxpZCk7XG4gICAgbGV0IGJhbGFuY2UsbWVzc2FnZVRleHQ9XCJcIjtcbiAgICBcbiAgICBpZihhY2Nlc3NBbGxvd2VkID09PSB0cnVlKVxuICAgIHtcbiAgICAgIGJhbGFuY2UgPSBIQkxVc2VyU2VydmljZS5nZXRBY2NvdW50QmFsYW5jZShoYmxpZCk7XG4gICAgICBtZXNzYWdlVGV4dCA9ICdEZWFyICcraGJsaWQrXCIsIHlvdXIgQWNjb3VudCBCYWxhbmNlIGlzIFJzLlwiK2JhbGFuY2U7XG4gICAgfVxuICAgIGVsc2VcbiAgICAgIG1lc3NhZ2VUZXh0ID0gJ0Vycm9yISBEZWFyICcraGJsaWQrXCIgLCBcIithY2Nlc3NBbGxvd2VkO1xuICAgIFxuICAgICAgdmFyIG1lc3NhZ2VEYXRhID0ge1xuICAgICAgICByZWNpcGllbnQ6IHtcbiAgICAgICAgICBpZDogcmVjaXBpZW50SWRcbiAgICAgICAgfSxcbiAgICAgICAgbWVzc2FnZToge1xuICAgICAgICAgIHRleHQ6IG1lc3NhZ2VUZXh0XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGNhbGxTZW5kQVBJKG1lc3NhZ2VEYXRhKTtcbiAgfVxuICBlbHNlIC8vIEFjY291bnQgaXMgbm90IGxpbmtlZFxuICAgIHNlbmRMb2dpbkJ1dHRvbihyZWNpcGllbnRJZCwnVG8gQWNjZXNzIHlvdXIgQWNjb3VudCBCYWxhbmNlLFBsZWFzZSBsb2dpbicpO1xuICAgIFxufVxuXG5cbmZ1bmN0aW9uIHNlbmRUZXh0TWVzc2FnZShyZWNpcGllbnRJZCwgbWVzc2FnZVRleHQpIHtcbiAgdmFyIG1lc3NhZ2VEYXRhID0ge1xuICAgIHJlY2lwaWVudDoge1xuICAgICAgaWQ6IHJlY2lwaWVudElkXG4gICAgfSxcbiAgICBtZXNzYWdlOiB7XG4gICAgICB0ZXh0OiBtZXNzYWdlVGV4dFxuICAgIH1cbiAgfTtcblxuICBjYWxsU2VuZEFQSShtZXNzYWdlRGF0YSk7XG59XG5cbmZ1bmN0aW9uIHNlbmRHZW5lcmljTWVzc2FnZShyZWNpcGllbnRJZCkge1xuICB2YXIgbWVzc2FnZURhdGEgPSB7XG4gICAgcmVjaXBpZW50OiB7XG4gICAgICBpZDogcmVjaXBpZW50SWRcbiAgICB9LFxuICAgIG1lc3NhZ2U6IHtcbiAgICAgIGF0dGFjaG1lbnQ6IHtcbiAgICAgICAgdHlwZTogXCJ0ZW1wbGF0ZVwiLFxuICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgdGVtcGxhdGVfdHlwZTogXCJnZW5lcmljXCIsXG4gICAgICAgICAgZWxlbWVudHM6IFt7XG4gICAgICAgICAgICB0aXRsZTogXCJyaWZ0XCIsXG4gICAgICAgICAgICBzdWJ0aXRsZTogXCJOZXh0LWdlbmVyYXRpb24gdmlydHVhbCByZWFsaXR5XCIsXG4gICAgICAgICAgICBpdGVtX3VybDogXCJodHRwczovL3d3dy5vY3VsdXMuY29tL2VuLXVzL3JpZnQvXCIsICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBpbWFnZV91cmw6IFwiaHR0cDovL21lc3NlbmdlcmRlbW8ucGFyc2VhcHAuY29tL2ltZy9yaWZ0LnBuZ1wiLFxuICAgICAgICAgICAgYnV0dG9uczogW3tcbiAgICAgICAgICAgICAgdHlwZTogXCJ3ZWJfdXJsXCIsXG4gICAgICAgICAgICAgIHVybDogXCJodHRwczovL3d3dy5vY3VsdXMuY29tL2VuLXVzL3JpZnQvXCIsXG4gICAgICAgICAgICAgIHRpdGxlOiBcIk9wZW4gV2ViIFVSTFwiXG4gICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgIHR5cGU6IFwicG9zdGJhY2tcIixcbiAgICAgICAgICAgICAgdGl0bGU6IFwiQ2FsbCBQb3N0YmFja1wiLFxuICAgICAgICAgICAgICBwYXlsb2FkOiBcIlBheWxvYWQgZm9yIGZpcnN0IGJ1YmJsZVwiLFxuICAgICAgICAgICAgfV0sXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgdGl0bGU6IFwidG91Y2hcIixcbiAgICAgICAgICAgIHN1YnRpdGxlOiBcIllvdXIgSGFuZHMsIE5vdyBpbiBWUlwiLFxuICAgICAgICAgICAgaXRlbV91cmw6IFwiaHR0cHM6Ly93d3cub2N1bHVzLmNvbS9lbi11cy90b3VjaC9cIiwgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIGltYWdlX3VybDogXCJodHRwOi8vbWVzc2VuZ2VyZGVtby5wYXJzZWFwcC5jb20vaW1nL3RvdWNoLnBuZ1wiLFxuICAgICAgICAgICAgYnV0dG9uczogW3tcbiAgICAgICAgICAgICAgdHlwZTogXCJ3ZWJfdXJsXCIsXG4gICAgICAgICAgICAgIHVybDogXCJodHRwczovL3d3dy5vY3VsdXMuY29tL2VuLXVzL3RvdWNoL1wiLFxuICAgICAgICAgICAgICB0aXRsZTogXCJPcGVuIFdlYiBVUkxcIlxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICB0eXBlOiBcInBvc3RiYWNrXCIsXG4gICAgICAgICAgICAgIHRpdGxlOiBcIkNhbGwgUG9zdGJhY2tcIixcbiAgICAgICAgICAgICAgcGF5bG9hZDogXCJQYXlsb2FkIGZvciBzZWNvbmQgYnViYmxlXCIsXG4gICAgICAgICAgICB9XVxuICAgICAgICAgIH1dXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07ICBcblxuICBjYWxsU2VuZEFQSShtZXNzYWdlRGF0YSk7XG59XG5cblxuZnVuY3Rpb24gc2VuZExvZ2luQnV0dG9uKHJlY2lwaWVudElkLCBkaXNwbGF5TWVzc2FnZSkge1xuICBcbiAgdmFyIG1lc3NhZ2VEYXRhID0ge1xuICAgIHJlY2lwaWVudDoge1xuICAgICAgaWQ6IHJlY2lwaWVudElkXG4gICAgfSxcbiAgICBtZXNzYWdlOiB7XG4gICAgICBhdHRhY2htZW50OiB7XG4gICAgICAgIHR5cGU6IFwidGVtcGxhdGVcIixcbiAgICAgICAgcGF5bG9hZDoge1xuICAgICAgICAgIHRlbXBsYXRlX3R5cGU6IFwiZ2VuZXJpY1wiLFxuICAgICAgICAgIGVsZW1lbnRzOiBbXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCJIQkwgTW9iaWxlIENoYXRCb3RcIixcbiAgICAgICAgICAgICAgICAgICAgc3VidGl0bGU6IGRpc3BsYXlNZXNzYWdlLFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uczogW1xuICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJhY2NvdW50X2xpbmtcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9xdWl2ZXItdGVycml0b3J5LmdsaXRjaC5tZS9sb2dpblwiXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJhY2NvdW50X3VubGlua1wiXG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTsgIFxuXG4gIGNhbGxTZW5kQVBJKG1lc3NhZ2VEYXRhKTtcbn1cbmZ1bmN0aW9uIGNhbGxTZW5kQVBJKG1lc3NhZ2VEYXRhKSB7XG4gIHJlcXVlc3Qoe1xuICAgIHVyaTogJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YyLjYvbWUvbWVzc2FnZXMnLFxuICAgIHFzOiB7IGFjY2Vzc190b2tlbjogcHJvY2Vzcy5lbnYuUEFHRV9BQ0NFU1NfVE9LRU4gfSxcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBqc29uOiBtZXNzYWdlRGF0YVxuXG4gIH0sIGZ1bmN0aW9uIChlcnJvciwgcmVzcG9uc2UsIGJvZHkpIHtcbiAgICBpZiAoIWVycm9yICYmIHJlc3BvbnNlLnN0YXR1c0NvZGUgPT0gMjAwKSB7XG4gICAgICB2YXIgcmVjaXBpZW50SWQgPSBib2R5LnJlY2lwaWVudF9pZDtcbiAgICAgIHZhciBtZXNzYWdlSWQgPSBib2R5Lm1lc3NhZ2VfaWQ7XG5cbiAgICAgIGNvbnNvbGUubG9nKFwiU3VjY2Vzc2Z1bGx5IHNlbnQgZ2VuZXJpYyBtZXNzYWdlIHdpdGggaWQgJXMgdG8gcmVjaXBpZW50ICVzXCIsIFxuICAgICAgICBtZXNzYWdlSWQsIHJlY2lwaWVudElkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcIlVuYWJsZSB0byBzZW5kIG1lc3NhZ2UuXCIpO1xuICAgICAgY29uc29sZS5lcnJvcihyZXNwb25zZSk7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICB9XG4gIH0pOyAgXG59XG5cbi8vIFNldCBFeHByZXNzIHRvIGxpc3RlbiBvdXQgZm9yIEhUVFAgcmVxdWVzdHNcbnZhciBzZXJ2ZXIgPSBhcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCwgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZyhcIkxpc3RlbmluZyBvbiBwb3J0ICVzXCIsIHNlcnZlci5hZGRyZXNzKCkucG9ydCk7XG59KTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "bot.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "request",
        "path",
        "pug",
        "LinkedUserService",
        "HBLUsers",
        "messengerButton",
        "app",
        "use",
        "static",
        "set",
        "json",
        "urlencoded",
        "extended",
        "linkService",
        "HBLUserService",
        "account_balance",
        "get",
        "req",
        "res",
        "redirect_uri",
        "account_linking_token",
        "page",
        "renderFile",
        "fbparams",
        "console",
        "log",
        "send",
        "render",
        "query",
        "post",
        "body",
        "hblid",
        "HBLID",
        "JSON",
        "parse",
        "result",
        "isUserLinked",
        "requestPacket",
        "uri",
        "method",
        "redirect",
        "status",
        "process",
        "env",
        "VERIFY_TOKEN",
        "error",
        "sendStatus",
        "data",
        "object",
        "entry",
        "forEach",
        "pageID",
        "id",
        "timeOfEvent",
        "time",
        "messaging",
        "event",
        "message",
        "receivedMessage",
        "postback",
        "receivedPostback",
        "account_linking",
        "receivedAccountLinkingPostBack",
        "senderID",
        "sender",
        "recipientID",
        "recipient",
        "timeOfMessage",
        "timestamp",
        "stringify",
        "messageId",
        "mid",
        "messageText",
        "text",
        "messageAttachments",
        "attachments",
        "sendGenericMessage",
        "sendLoginButton",
        "getAccountBalance",
        "sendTextMessage",
        "timeOfPostback",
        "payload",
        "senderPSID",
        "authorization_code",
        "linkHBLIDwithPSID",
        "setUserLink",
        "getHBLID",
        "removeLink",
        "recipientId",
        "accessAllowed",
        "isFBAccessAllowedForThisUser",
        "balance",
        "messageData",
        "callSendAPI",
        "attachment",
        "type",
        "template_type",
        "elements",
        "title",
        "subtitle",
        "item_url",
        "image_url",
        "buttons",
        "url",
        "displayMessage",
        "qs",
        "access_token",
        "PAGE_ACCESS_TOKEN",
        "response",
        "statusCode",
        "recipient_id",
        "message_id",
        "server",
        "listen",
        "PORT",
        "address",
        "port"
      ],
      "mappings": "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",
      "file": "bot.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "//\n// This is main file containing code implementing the Express server and functionality for the Express echo bot.\n//\n'use strict';\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst request = require('request');\nconst path = require('path');\nconst pug = require('pug');\nconst LinkedUserService = require('./LinkedUserService');\nconst HBLUsers = require('./HBLUsers');\n\nvar messengerButton = \"<html><head><title>Facebook Messenger Bot </title></head><body><h1>Facebook Messenger Bot By Mursil Sayed</h1>This is a bot based on Messenger Platform QuickStart. For more details, see their <a href=\\\"https://developers.facebook.com/docs/messenger-platform/guides/quick-start\\\">docs</a>.<footer id=\\\"gWidget\\\"></footer><script src=\\\"https://widget.glitch.me/widget.min.js\\\"></script></body></html>\";\n\n\n\n// The rest of the code implements the routes for our Express server.\nlet app = express();\napp.use(express.static('static'));//making the folder for static assets\napp.set('view engine', 'pug');//setting the viewing engine to pug\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n\n\n//Variable for storing the User credentials for Linking\n//let redirect_uri ='';\n//let account_linking_token='';\n//let page_scopped_user_id ='';\nvar linkService = new LinkedUserService();\nvar HBLUserService = new HBLUsers();\n\n//let authorization_TOKEN =\"312ewqkdjwqdj21034e09483\";\n//let account_linked=false;\n\n//let linked_accounts=[];\nlet account_balance=1000;\n\n//let linked_user_names ={};\n\n\n\n  \n\n\n\napp.get('/testfilerendering', function(req, res) {\n  // Render a set of data\n     let redirect_uri =\"sample redirect uri\";\n  let account_linking_token = \"sample linking token\";\n  \n  const page = pug.renderFile('views/user-identity.pug',{ fbparams:{redirect_uri: redirect_uri, account_linking_token: account_linking_token }});\nconsole.log(page);\n  res.send(page);\n  \n});\n\n\napp.get('/testviewrendering', function (req, res) {\n   let redirect_uri =\"sample redirect uri\";\n  let account_linking_token = \"sample linking token\";\n  \n  res.render('user-identity', { fbparams:{redirect_uri: redirect_uri, account_linking_token: account_linking_token } } );\n  \n});\n\n\n\napp.get('/login', function(req, res) {\n  \n  //This method performs the following tasks\n  //1- It will save the recieved query parameters as hidden form fields\n  //2- It will create a template for Rendering Screen that will ask user to enter the userID and submit a button\n  \n  \n  \n  \n  //1- Saving query parameters in global var\n  let redirect_uri =req.query['redirect_uri'];\n  let account_linking_token = req.query['account_linking_token'];\n  \n//   redirect_uri =\"test url\";\n//   account_linking_token = \"test_token\";\n  \n  \n  //2- It will create a template for Rendering Screen that will ask user to enter the userID and submit a button\n  res.render('login', { fbparams:{redirect_uri: redirect_uri, account_linking_token: account_linking_token } } );\n\n  \n  \n  \n});\n\n         \napp.post('/auth', function(req, res) {\n\n//This method performs the following tasks\n  //1- It will send an error message to the user that account is already linked. \n  //2- In case of successful authentication, It will call the redirect_url and pass an authorization_code token to it. In case of failure, it will also call the re-direct url but will not send the token\n  \n \n  console.log(req.body);\n  let hblid =req.body.HBLID;\n  let fbparams= JSON.parse(req.body.fbparams);\n  \n  console.log('HBLID='+hblid);\n  console.log('fbparams='+fbparams);\n  console.log('fbparams.redirect_uri='+fbparams.redirect_uri);\n  \n  let result = HBLUserService.isUserLinked(hblid);\n  \n  if( result === false)\n  {\n       console.log(\"Account Validation Successful. Calling redirect url\");\n    //Calling fb redirect\n    \n    let requestPacket = {\n    uri: fbparams.redirect_uri+'&authorization_code='+hblid,\n    method: 'GET'\n    };\n\n    console.log(\"Calling Redirect URL, request Packet URL:\"+requestPacket.uri);\n    res.redirect(requestPacket.uri);\n      \n  }else if(result === true)\n   {\n     console.log(hblid+' is already linked with a facebook account');\n\n     res.status(200).send(hblid+' is already linked with a facebook account'); \n   } \n  else// the account is already linked\n  {\n    console.log(result);\n   res.status(200).send(result); \n    \n  }\n  \n  \n \n  \n\n  \n  \n});\n\n\n\n\n\n\n\n\n\n\n\n\n// Webhook validation\napp.get('/webhook', function(req, res) {\n  if (req.query['hub.mode'] === 'subscribe' &&\n      req.query['hub.verify_token'] === process.env.VERIFY_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);          \n  }\n});\n\n// Display the web page\n// app.get('/', function(req, res) {\n\n  \n//   res.writeHead(200, {'Content-Type': 'text/html'});\n//   res.write(loginHtml);\n//   res.end();\n  \n  \n\n\n// });\n\n\n// Message processing\napp.post('/webhook', function (req, res) {\n  console.log(req.body);\n  var data = req.body;\n\n  // Make sure this is a page subscription\n  if (data.object === 'page') {\n    \n    // Iterate over each entry - there may be multiple if batched\n    data.entry.forEach(function(entry) {\n      var pageID = entry.id;\n      var timeOfEvent = entry.time;\n\n      // Iterate over each messaging event\n      entry.messaging.forEach(function(event) {\n        if (event.message) {\n          receivedMessage(event);\n        } else if (event.postback) {\n          receivedPostback(event);   \n        } else if(event.account_linking)\n          {\n              receivedAccountLinkingPostBack(event);   \n\n          }\n        \n        else {\n          console.log(\"Webhook received unknown event: \", event);\n        }\n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know\n    // you've successfully received the callback. Otherwise, the request\n    // will time out and we will keep trying to resend.\n    res.sendStatus(200);\n  }\n});\n\n// Incoming events handling\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\", \n    senderID, recipientID, timeOfMessage);\n  console.log(JSON.stringify(message));\n\n  var messageId = message.mid;\n\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n\n  if (messageText) {\n    // If we receive a text message, check to see if it matches a keyword\n    // and send back the template example. Otherwise, just echo the text we received.\n    switch (messageText) {\n      case 'generic':\n        sendGenericMessage(senderID);\n        break;\n      case 'login':\n        sendLoginButton(senderID,'Please Connect Your HBL Mobile Account with chatbot');\n        break;\n      case 'account balance':\n        getAccountBalance(senderID);\n        break;\n        \n      default:\n        sendTextMessage(senderID, messageText);\n    }\n  } else if (messageAttachments) {\n    sendTextMessage(senderID, \"Message with attachment received\");\n  }\n}\n\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback \n  // button for Structured Messages. \n  var payload = event.postback.payload;\n\n  console.log(\"Received postback for user %d and page %d with payload '%s' \" + \n    \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n  sendTextMessage(senderID, \"Postback called\");\n}\n\n\nfunction receivedAccountLinkingPostBack(event) {\n  \n  var senderPSID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  console.log(\"Received Account Linking Call back URL;\\n senderID=%s \\n status=%s \\n code=%s\",event.sender.id, event.account_linking.status, event.account_linking.authorization_code);\n\n  // When a postback is called, we'll send a message back to the sender to \n  // let them know it was successful\n  if(event.account_linking.status ==='linked')\n  {\n    let hblid = event.account_linking.authorization_code;\n\n    linkService.linkHBLIDwithPSID(senderPSID,hblid);\n    HBLUserService.setUserLink(hblid);\n    sendTextMessage(senderPSID, \"Account Linked. Welcome \"+hblid+\"!\");\n  }\n  else // unlink user Account\n  {\n    let hblid = linkService.getHBLID(senderPSID);\n    linkService.removeLink(senderPSID);\n    HBLUserService.setUserLink(hblid,false);\n    sendTextMessage(senderPSID, \"Account Unlinked for user \"+hblid);\n  }\n\n  \n}\n\n\n\n\n//////////////////////////\n// Sending helpers\n//////////////////////////\n\nfunction getAccountBalance(recipientId) {\n  \n  let hblid = linkService.getHBLID(recipientId);\n  \n  \n  if(hblid!==false)// Account linking found\n  {\n    //let hblid = linkService.getHBLID(recipientId);\n    \n    let accessAllowed = HBLUserService.isFBAccessAllowedForThisUser(hblid);\n    let balance,messageText=\"\";\n    \n    if(accessAllowed === true)\n    {\n      balance = HBLUserService.getAccountBalance(hblid);\n      messageText = 'Dear '+hblid+\", your Account Balance is Rs.\"+balance;\n    }\n    else\n      messageText = 'Error! Dear '+hblid+\" , \"+accessAllowed;\n    \n      var messageData = {\n        recipient: {\n          id: recipientId\n        },\n        message: {\n          text: messageText\n        }\n      };\n\n      callSendAPI(messageData);\n  }\n  else // Account is not linked\n    sendLoginButton(recipientId,'To Access your Account Balance,Please login');\n    \n}\n\n\nfunction sendTextMessage(recipientId, messageText) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      text: messageText\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction sendGenericMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"generic\",\n          elements: [{\n            title: \"rift\",\n            subtitle: \"Next-generation virtual reality\",\n            item_url: \"https://www.oculus.com/en-us/rift/\",               \n            image_url: \"http://messengerdemo.parseapp.com/img/rift.png\",\n            buttons: [{\n              type: \"web_url\",\n              url: \"https://www.oculus.com/en-us/rift/\",\n              title: \"Open Web URL\"\n            }, {\n              type: \"postback\",\n              title: \"Call Postback\",\n              payload: \"Payload for first bubble\",\n            }],\n          }, {\n            title: \"touch\",\n            subtitle: \"Your Hands, Now in VR\",\n            item_url: \"https://www.oculus.com/en-us/touch/\",               \n            image_url: \"http://messengerdemo.parseapp.com/img/touch.png\",\n            buttons: [{\n              type: \"web_url\",\n              url: \"https://www.oculus.com/en-us/touch/\",\n              title: \"Open Web URL\"\n            }, {\n              type: \"postback\",\n              title: \"Call Postback\",\n              payload: \"Payload for second bubble\",\n            }]\n          }]\n        }\n      }\n    }\n  };  \n\n  callSendAPI(messageData);\n}\n\n\nfunction sendLoginButton(recipientId, displayMessage) {\n  \n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"generic\",\n          elements: [\n            \n                    {\n                    title: \"HBL Mobile ChatBot\",\n                    subtitle: displayMessage,\n                    \n                    buttons: [\n                      \n                    \n                      {\n                        \"type\": \"account_link\",\n                        \"url\": \"https://quiver-territory.glitch.me/login\"\n                      },\n                      {\n                        \"type\": \"account_unlink\"\n        \n                        \n                      }\n                    \n                    ]\n                      \n\n                    }\n            \n           \n                  ]\n        }\n      }\n    }\n  };  \n\n  callSendAPI(messageData);\n}\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: process.env.PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      console.log(\"Successfully sent generic message with id %s to recipient %s\", \n        messageId, recipientId);\n    } else {\n      console.error(\"Unable to send message.\");\n      console.error(response);\n      console.error(error);\n    }\n  });  \n}\n\n// Set Express to listen out for HTTP requests\nvar server = app.listen(process.env.PORT || 3000, function () {\n  console.log(\"Listening on port %s\", server.address().port);\n});"
      ]
    },
    "mtime": 1490897202892
  },
  "{\"filename\":\"/app/LinkedUserService.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/LinkedUserService.js",
      "filenameRelative": "/app/LinkedUserService.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "LinkedUserService.js",
      "sourceFileName": "LinkedUserService.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "LinkedUserService"
    },
    "ignored": false,
    "code": "\nvar Map = require('es6-map');\n\nclass LinkedUserService {\n\n  constructor() {\n    this.linked_accounts = new Map();\n  }\n\n  linkHBLIDwithPSID(psid, HBLID) {\n\n    if (this.linked_accounts.has(psid) === false) // account is not already linked\n      {\n        this.linked_accounts.set(psid, HBLID);\n        return true;\n      } else // Account is already linked\n      {\n        return false;\n      }\n  }\n\n  removeLink(psid) {\n\n    if (this.linked_accounts.has(psid) === true) // account is already linked\n      {\n        this.linked_accounts.delete(psid); // true \n        console.log(\"account unlinked for psid =\" + psid);\n\n        return true;\n      } else // Account is not linked\n      {\n        console.log(\"Unable to unlink account for psid =\" + psid);\n\n        return false;\n      }\n  }\n\n  getHBLID(psid) {\n    if (this.linked_accounts.has(psid) === true) return this.linked_accounts.get(psid);else return false;\n  }\n\n}\n\nmodule.exports = LinkedUserService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpbmtlZFVzZXJTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIk1hcCIsInJlcXVpcmUiLCJMaW5rZWRVc2VyU2VydmljZSIsImNvbnN0cnVjdG9yIiwibGlua2VkX2FjY291bnRzIiwibGlua0hCTElEd2l0aFBTSUQiLCJwc2lkIiwiSEJMSUQiLCJoYXMiLCJzZXQiLCJyZW1vdmVMaW5rIiwiZGVsZXRlIiwiY29uc29sZSIsImxvZyIsImdldEhCTElEIiwiZ2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjtBQUNBLElBQUlBLE1BQU1DLFFBQVEsU0FBUixDQUFWOztBQUdBLE1BQU1DLGlCQUFOLENBQXVCOztBQUV0QkMsZ0JBQWM7QUFDWCxTQUFLQyxlQUFMLEdBQXVCLElBQUlKLEdBQUosRUFBdkI7QUFFRjs7QUFLQUssb0JBQWtCQyxJQUFsQixFQUF1QkMsS0FBdkIsRUFBNkI7O0FBRTNCLFFBQUcsS0FBS0gsZUFBTCxDQUFxQkksR0FBckIsQ0FBeUJGLElBQXpCLE1BQW1DLEtBQXRDLEVBQTRDO0FBQzVDO0FBQ0UsYUFBS0YsZUFBTCxDQUFxQkssR0FBckIsQ0FBeUJILElBQXpCLEVBQThCQyxLQUE5QjtBQUNBLGVBQU8sSUFBUDtBQUVELE9BTEQsTUFLTTtBQUNKO0FBQ0UsZUFBTyxLQUFQO0FBQ0Q7QUFHSjs7QUFFREcsYUFBV0osSUFBWCxFQUFnQjs7QUFFZCxRQUFHLEtBQUtGLGVBQUwsQ0FBcUJJLEdBQXJCLENBQXlCRixJQUF6QixNQUFtQyxJQUF0QyxFQUEyQztBQUMzQztBQUNFLGFBQUtGLGVBQUwsQ0FBcUJPLE1BQXJCLENBQTRCTCxJQUE1QixFQURGLENBQzRDO0FBQzFDTSxnQkFBUUMsR0FBUixDQUFZLGdDQUE4QlAsSUFBMUM7O0FBRUEsZUFBTyxJQUFQO0FBRUQsT0FQRCxNQU9NO0FBQ0o7QUFDRU0sZ0JBQVFDLEdBQVIsQ0FBWSx3Q0FBc0NQLElBQWxEOztBQUVBLGVBQU8sS0FBUDtBQUNEO0FBR0o7O0FBRURRLFdBQVNSLElBQVQsRUFBYztBQUNaLFFBQUcsS0FBS0YsZUFBTCxDQUFxQkksR0FBckIsQ0FBeUJGLElBQXpCLE1BQW1DLElBQXRDLEVBQ0UsT0FBTyxLQUFLRixlQUFMLENBQXFCVyxHQUFyQixDQUF5QlQsSUFBekIsQ0FBUCxDQURGLEtBR0UsT0FBTyxLQUFQO0FBRUg7O0FBbERvQjs7QUF1RHZCVSxPQUFPQyxPQUFQLEdBQWlCZixpQkFBakIiLCJmaWxlIjoiTGlua2VkVXNlclNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbIlxudmFyIE1hcCA9IHJlcXVpcmUoJ2VzNi1tYXAnKTtcblxuXG5jbGFzcyBMaW5rZWRVc2VyU2VydmljZXtcblxuIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubGlua2VkX2FjY291bnRzID0gbmV3IE1hcCgpO1xuIFxuIH1cbiAgXG4gIFxuIFxuICBcbiAgbGlua0hCTElEd2l0aFBTSUQocHNpZCxIQkxJRCl7XG4gICAgXG4gICAgaWYodGhpcy5saW5rZWRfYWNjb3VudHMuaGFzKHBzaWQpID09PSBmYWxzZSkvLyBhY2NvdW50IGlzIG5vdCBhbHJlYWR5IGxpbmtlZFxuICAgIHtcbiAgICAgIHRoaXMubGlua2VkX2FjY291bnRzLnNldChwc2lkLEhCTElEKTsgICAgXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIFxuICAgIH1lbHNlIC8vIEFjY291bnQgaXMgYWxyZWFkeSBsaW5rZWRcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIFxuICAgIFxuICB9XG5cbiAgcmVtb3ZlTGluayhwc2lkKXtcbiAgICBcbiAgICBpZih0aGlzLmxpbmtlZF9hY2NvdW50cy5oYXMocHNpZCkgPT09IHRydWUpLy8gYWNjb3VudCBpcyBhbHJlYWR5IGxpbmtlZFxuICAgIHtcbiAgICAgIHRoaXMubGlua2VkX2FjY291bnRzLmRlbGV0ZShwc2lkKTsgICAgICAgIC8vIHRydWUgXG4gICAgICBjb25zb2xlLmxvZyhcImFjY291bnQgdW5saW5rZWQgZm9yIHBzaWQgPVwiK3BzaWQpO1xuICAgICAgXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIFxuICAgIH1lbHNlIC8vIEFjY291bnQgaXMgbm90IGxpbmtlZFxuICAgICAge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlVuYWJsZSB0byB1bmxpbmsgYWNjb3VudCBmb3IgcHNpZCA9XCIrcHNpZCk7XG4gICAgICBcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIFxuICAgIFxuICB9XG4gIFxuICBnZXRIQkxJRChwc2lkKXtcbiAgICBpZih0aGlzLmxpbmtlZF9hY2NvdW50cy5oYXMocHNpZCkgPT09IHRydWUpXG4gICAgICByZXR1cm4gdGhpcy5saW5rZWRfYWNjb3VudHMuZ2V0KHBzaWQpO1xuICAgIGVsc2UgXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgXG4gIH1cblxufVxuXG5cbm1vZHVsZS5leHBvcnRzID0gTGlua2VkVXNlclNlcnZpY2U7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "LinkedUserService.js"
      ],
      "names": [
        "Map",
        "require",
        "LinkedUserService",
        "constructor",
        "linked_accounts",
        "linkHBLIDwithPSID",
        "psid",
        "HBLID",
        "has",
        "set",
        "removeLink",
        "delete",
        "console",
        "log",
        "getHBLID",
        "get",
        "module",
        "exports"
      ],
      "mappings": ";AACA,IAAIA,MAAMC,QAAQ,SAAR,CAAV;;AAGA,MAAMC,iBAAN,CAAuB;;AAEtBC,gBAAc;AACX,SAAKC,eAAL,GAAuB,IAAIJ,GAAJ,EAAvB;AAEF;;AAKAK,oBAAkBC,IAAlB,EAAuBC,KAAvB,EAA6B;;AAE3B,QAAG,KAAKH,eAAL,CAAqBI,GAArB,CAAyBF,IAAzB,MAAmC,KAAtC,EAA4C;AAC5C;AACE,aAAKF,eAAL,CAAqBK,GAArB,CAAyBH,IAAzB,EAA8BC,KAA9B;AACA,eAAO,IAAP;AAED,OALD,MAKM;AACJ;AACE,eAAO,KAAP;AACD;AAGJ;;AAEDG,aAAWJ,IAAX,EAAgB;;AAEd,QAAG,KAAKF,eAAL,CAAqBI,GAArB,CAAyBF,IAAzB,MAAmC,IAAtC,EAA2C;AAC3C;AACE,aAAKF,eAAL,CAAqBO,MAArB,CAA4BL,IAA5B,EADF,CAC4C;AAC1CM,gBAAQC,GAAR,CAAY,gCAA8BP,IAA1C;;AAEA,eAAO,IAAP;AAED,OAPD,MAOM;AACJ;AACEM,gBAAQC,GAAR,CAAY,wCAAsCP,IAAlD;;AAEA,eAAO,KAAP;AACD;AAGJ;;AAEDQ,WAASR,IAAT,EAAc;AACZ,QAAG,KAAKF,eAAL,CAAqBI,GAArB,CAAyBF,IAAzB,MAAmC,IAAtC,EACE,OAAO,KAAKF,eAAL,CAAqBW,GAArB,CAAyBT,IAAzB,CAAP,CADF,KAGE,OAAO,KAAP;AAEH;;AAlDoB;;AAuDvBU,OAAOC,OAAP,GAAiBf,iBAAjB",
      "file": "LinkedUserService.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "\nvar Map = require('es6-map');\n\n\nclass LinkedUserService{\n\n constructor() {\n    this.linked_accounts = new Map();\n \n }\n  \n  \n \n  \n  linkHBLIDwithPSID(psid,HBLID){\n    \n    if(this.linked_accounts.has(psid) === false)// account is not already linked\n    {\n      this.linked_accounts.set(psid,HBLID);    \n      return true;\n      \n    }else // Account is already linked\n      {\n        return false;\n      }\n    \n    \n  }\n\n  removeLink(psid){\n    \n    if(this.linked_accounts.has(psid) === true)// account is already linked\n    {\n      this.linked_accounts.delete(psid);        // true \n      console.log(\"account unlinked for psid =\"+psid);\n      \n      return true;\n      \n    }else // Account is not linked\n      {\n        console.log(\"Unable to unlink account for psid =\"+psid);\n      \n        return false;\n      }\n    \n    \n  }\n  \n  getHBLID(psid){\n    if(this.linked_accounts.has(psid) === true)\n      return this.linked_accounts.get(psid);\n    else \n      return false;\n    \n  }\n\n}\n\n\nmodule.exports = LinkedUserService;"
      ]
    },
    "mtime": 1490896270681
  },
  "{\"filename\":\"/app/HBLUsers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/HBLUsers.js",
      "filenameRelative": "/app/HBLUsers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "HBLUsers.js",
      "sourceFileName": "HBLUsers.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "HBLUsers"
    },
    "ignored": false,
    "code": "var Map = require('es6-map');\n\nclass HBLUsers {\n\n  constructor() {\n\n    this.hbl_users = new Map([['mursil', { allowFBaccess: true, accountBalance: 5000, isAccountLinked: false }], ['sanya', { allowFBaccess: true, accountBalance: 1000, isAccountLinked: false }], ['marium', { allowFBaccess: true, accountBalance: 1000, isAccountLinked: false }], ['faizan', { allowFBaccess: true, accountBalance: 1000, isAccountLinked: false }], ['mehwish', { allowFBaccess: false, accountBalance: 3000, isAccountLinked: false }]]);\n  }\n  iterateUsersMap() {\n    console.log('iterating users map');\n\n    this.hbl_users.forEach(function (value, key) {\n      console.log(key + ' = ' + value);\n    });\n  }\n\n  isFBAccessAllowedForThisUser(HBLID) {\n\n    let hblid = HBLID.toLowerCase();\n\n    if (this.hbl_users.has(hblid) === true) // is a valid HBL Mobile User\n      {\n        if (this.hbl_users.get(hblid).allowFBaccess === true) // Facebook access is also allowed\n          return true;else return 'facebook access not allowed';\n      } else return 'Invalid User';\n  }\n\n  getAccountBalance(HBLID) {\n\n    let hblid = HBLID.toLowerCase();\n    if (this.hbl_users.has(hblid) === true) // is a valid HBL Mobile User\n      {\n        return this.hbl_users.get(hblid).accountBalance;\n      } else return 'Invalid User';\n  }\n\n  isUserLinked(HBLID) {\n\n    // console.log('isUserLinked  called with userid ='+HBLID);\n    let hblid = HBLID.toLowerCase();\n    //console.log('small case userid ='+hblid);\n    this.iterateUsersMap();\n\n    if (this.hbl_users.has(hblid) === true) // is a valid HBL Mobile User\n      {\n        //      console.log('user is present ;'+hblid);\n\n        return this.hbl_users.get(hblid).isAccountLinked;\n      } else return 'Invalid User';\n  }\n\n  setUserLink(HBLID, status = true) {\n\n    let hblid = HBLID.toLowerCase();\n    if (this.hbl_users.has(hblid) === true) // is a valid HBL Mobile User\n      {\n        let user = this.hbl_users.get(hblid);\n        user.isAccountLinked = status;\n        return this.hbl_users.set(hblid, user);\n      } else return 'Invalid User';\n  }\n}\n\nmodule.exports = HBLUsers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhCTFVzZXJzLmpzIl0sIm5hbWVzIjpbIk1hcCIsInJlcXVpcmUiLCJIQkxVc2VycyIsImNvbnN0cnVjdG9yIiwiaGJsX3VzZXJzIiwiYWxsb3dGQmFjY2VzcyIsImFjY291bnRCYWxhbmNlIiwiaXNBY2NvdW50TGlua2VkIiwiaXRlcmF0ZVVzZXJzTWFwIiwiY29uc29sZSIsImxvZyIsImZvckVhY2giLCJ2YWx1ZSIsImtleSIsImlzRkJBY2Nlc3NBbGxvd2VkRm9yVGhpc1VzZXIiLCJIQkxJRCIsImhibGlkIiwidG9Mb3dlckNhc2UiLCJoYXMiLCJnZXQiLCJnZXRBY2NvdW50QmFsYW5jZSIsImlzVXNlckxpbmtlZCIsInNldFVzZXJMaW5rIiwic3RhdHVzIiwidXNlciIsInNldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLE1BQU1DLFFBQVEsU0FBUixDQUFWOztBQUlBLE1BQU1DLFFBQU4sQ0FBYzs7QUFFWkMsZ0JBQWM7O0FBRVosU0FBS0MsU0FBTCxHQUFpQixJQUFJSixHQUFKLENBQVEsQ0FDZixDQUFDLFFBQUQsRUFBVyxFQUFDSyxlQUFjLElBQWYsRUFBcUJDLGdCQUFlLElBQXBDLEVBQXlDQyxpQkFBaUIsS0FBMUQsRUFBWCxDQURlLEVBRWYsQ0FBQyxPQUFELEVBQVcsRUFBQ0YsZUFBYyxJQUFmLEVBQXFCQyxnQkFBZSxJQUFwQyxFQUF5Q0MsaUJBQWlCLEtBQTFELEVBQVgsQ0FGZSxFQUdmLENBQUMsUUFBRCxFQUFXLEVBQUNGLGVBQWMsSUFBZixFQUFxQkMsZ0JBQWUsSUFBcEMsRUFBeUNDLGlCQUFpQixLQUExRCxFQUFYLENBSGUsRUFJZixDQUFDLFFBQUQsRUFBVyxFQUFDRixlQUFjLElBQWYsRUFBcUJDLGdCQUFlLElBQXBDLEVBQXlDQyxpQkFBaUIsS0FBMUQsRUFBWCxDQUplLEVBS2YsQ0FBQyxTQUFELEVBQVksRUFBQ0YsZUFBYyxLQUFmLEVBQXNCQyxnQkFBZSxJQUFyQyxFQUEwQ0MsaUJBQWlCLEtBQTNELEVBQVosQ0FMZSxDQUFSLENBQWpCO0FBU0Y7QUFDQUMsb0JBQWlCO0FBQ2ZDLFlBQVFDLEdBQVIsQ0FBWSxxQkFBWjs7QUFFQSxTQUFLTixTQUFMLENBQWVPLE9BQWYsQ0FBdUIsVUFBU0MsS0FBVCxFQUFnQkMsR0FBaEIsRUFBcUI7QUFDdENKLGNBQVFDLEdBQVIsQ0FBWUcsTUFBTSxLQUFOLEdBQWNELEtBQTFCO0FBQ0wsS0FGRDtBQUlEOztBQUVERSwrQkFBNkJDLEtBQTdCLEVBQW1DOztBQUVqQyxRQUFJQyxRQUFRRCxNQUFNRSxXQUFOLEVBQVo7O0FBRUEsUUFBRyxLQUFLYixTQUFMLENBQWVjLEdBQWYsQ0FBbUJGLEtBQW5CLE1BQThCLElBQWpDLEVBQXNDO0FBQ3BDO0FBQ0UsWUFBRyxLQUFLWixTQUFMLENBQWVlLEdBQWYsQ0FBbUJILEtBQW5CLEVBQTBCWCxhQUExQixLQUE0QyxJQUEvQyxFQUFvRDtBQUNsRCxpQkFBTyxJQUFQLENBREYsS0FHRSxPQUFPLDZCQUFQO0FBQ0gsT0FOSCxNQVFFLE9BQU8sY0FBUDtBQUdIOztBQUVEZSxvQkFBa0JMLEtBQWxCLEVBQXdCOztBQUVyQixRQUFJQyxRQUFRRCxNQUFNRSxXQUFOLEVBQVo7QUFDQSxRQUFHLEtBQUtiLFNBQUwsQ0FBZWMsR0FBZixDQUFtQkYsS0FBbkIsTUFBOEIsSUFBakMsRUFBc0M7QUFDckM7QUFDRSxlQUFPLEtBQUtaLFNBQUwsQ0FBZWUsR0FBZixDQUFtQkgsS0FBbkIsRUFBMEJWLGNBQWpDO0FBRUQsT0FKRixNQU1DLE9BQU8sY0FBUDtBQUVIOztBQUdBZSxlQUFhTixLQUFiLEVBQW1COztBQUVsQjtBQUNBLFFBQUlDLFFBQVFELE1BQU1FLFdBQU4sRUFBWjtBQUNBO0FBQ0MsU0FBS1QsZUFBTDs7QUFFRCxRQUFHLEtBQUtKLFNBQUwsQ0FBZWMsR0FBZixDQUFtQkYsS0FBbkIsTUFBOEIsSUFBakMsRUFBc0M7QUFDcEM7QUFDQTs7QUFFRSxlQUFPLEtBQUtaLFNBQUwsQ0FBZWUsR0FBZixDQUFtQkgsS0FBbkIsRUFBMEJULGVBQWpDO0FBRUQsT0FOSCxNQVFFLE9BQU8sY0FBUDtBQUVGOztBQUVGZSxjQUFZUCxLQUFaLEVBQWtCUSxTQUFPLElBQXpCLEVBQThCOztBQUU1QixRQUFJUCxRQUFRRCxNQUFNRSxXQUFOLEVBQVo7QUFDQSxRQUFHLEtBQUtiLFNBQUwsQ0FBZWMsR0FBZixDQUFtQkYsS0FBbkIsTUFBOEIsSUFBakMsRUFBc0M7QUFDcEM7QUFDRSxZQUFJUSxPQUFPLEtBQUtwQixTQUFMLENBQWVlLEdBQWYsQ0FBbUJILEtBQW5CLENBQVg7QUFDQVEsYUFBS2pCLGVBQUwsR0FBdUJnQixNQUF2QjtBQUNBLGVBQU8sS0FBS25CLFNBQUwsQ0FBZXFCLEdBQWYsQ0FBbUJULEtBQW5CLEVBQXlCUSxJQUF6QixDQUFQO0FBRUQsT0FOSCxNQVFFLE9BQU8sY0FBUDtBQUdIO0FBdkZXOztBQTBGZEUsT0FBT0MsT0FBUCxHQUFpQnpCLFFBQWpCIiwiZmlsZSI6IkhCTFVzZXJzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTWFwID0gcmVxdWlyZSgnZXM2LW1hcCcpO1xuXG5cblxuY2xhc3MgSEJMVXNlcnN7XG4gIFxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBcbiAgICB0aGlzLmhibF91c2VycyA9IG5ldyBNYXAoW1xuICAgICAgICAgICAgICBbJ211cnNpbCcsIHthbGxvd0ZCYWNjZXNzOnRydWUsIGFjY291bnRCYWxhbmNlOjUwMDAsaXNBY2NvdW50TGlua2VkOiBmYWxzZX1dLFxuICAgICAgICAgICAgICBbJ3NhbnlhJywgIHthbGxvd0ZCYWNjZXNzOnRydWUsIGFjY291bnRCYWxhbmNlOjEwMDAsaXNBY2NvdW50TGlua2VkOiBmYWxzZX1dLFxuICAgICAgICAgICAgICBbJ21hcml1bScsIHthbGxvd0ZCYWNjZXNzOnRydWUsIGFjY291bnRCYWxhbmNlOjEwMDAsaXNBY2NvdW50TGlua2VkOiBmYWxzZX1dLFxuICAgICAgICAgICAgICBbJ2ZhaXphbicsIHthbGxvd0ZCYWNjZXNzOnRydWUsIGFjY291bnRCYWxhbmNlOjEwMDAsaXNBY2NvdW50TGlua2VkOiBmYWxzZX1dLFxuICAgICAgICAgICAgICBbJ21laHdpc2gnLCB7YWxsb3dGQmFjY2VzczpmYWxzZSwgYWNjb3VudEJhbGFuY2U6MzAwMCxpc0FjY291bnRMaW5rZWQ6IGZhbHNlfV1cbiAgICAgICAgICAgIF0pO1xuICAgIFxuIFxuIH1cbiAgaXRlcmF0ZVVzZXJzTWFwKCl7XG4gICAgY29uc29sZS5sb2coJ2l0ZXJhdGluZyB1c2VycyBtYXAnKTtcblxuICAgIHRoaXMuaGJsX3VzZXJzLmZvckVhY2goZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGtleSArICcgPSAnICsgdmFsdWUpO1xuICAgIH0pO1xuICAgIFxuICB9XG4gIFxuICBpc0ZCQWNjZXNzQWxsb3dlZEZvclRoaXNVc2VyKEhCTElEKXtcbiAgICBcbiAgICBsZXQgaGJsaWQgPSBIQkxJRC50b0xvd2VyQ2FzZSgpO1xuICAgIFxuICAgIGlmKHRoaXMuaGJsX3VzZXJzLmhhcyhoYmxpZCkgPT09IHRydWUpLy8gaXMgYSB2YWxpZCBIQkwgTW9iaWxlIFVzZXJcbiAgICAgIHtcbiAgICAgICAgaWYodGhpcy5oYmxfdXNlcnMuZ2V0KGhibGlkKS5hbGxvd0ZCYWNjZXNzID09PSB0cnVlKS8vIEZhY2Vib29rIGFjY2VzcyBpcyBhbHNvIGFsbG93ZWRcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHJldHVybiAnZmFjZWJvb2sgYWNjZXNzIG5vdCBhbGxvd2VkJztcbiAgICAgIH1cbiAgICBlbHNlXG4gICAgICByZXR1cm4gJ0ludmFsaWQgVXNlcic7XG4gICAgXG4gICAgICBcbiAgfVxuICBcbiAgZ2V0QWNjb3VudEJhbGFuY2UoSEJMSUQpe1xuICAgIFxuICAgICBsZXQgaGJsaWQgPSBIQkxJRC50b0xvd2VyQ2FzZSgpO1xuICAgICBpZih0aGlzLmhibF91c2Vycy5oYXMoaGJsaWQpID09PSB0cnVlKS8vIGlzIGEgdmFsaWQgSEJMIE1vYmlsZSBVc2VyXG4gICAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLmhibF91c2Vycy5nZXQoaGJsaWQpLmFjY291bnRCYWxhbmNlO1xuICAgICAgICAgIFxuICAgICAgfVxuICAgIGVsc2VcbiAgICAgIHJldHVybiAnSW52YWxpZCBVc2VyJztcbiAgICBcbiAgfVxuICBcbiAgXG4gICBpc1VzZXJMaW5rZWQoSEJMSUQpe1xuICAgIFxuICAgIC8vIGNvbnNvbGUubG9nKCdpc1VzZXJMaW5rZWQgIGNhbGxlZCB3aXRoIHVzZXJpZCA9JytIQkxJRCk7XG4gICAgbGV0IGhibGlkID0gSEJMSUQudG9Mb3dlckNhc2UoKTtcbiAgICAvL2NvbnNvbGUubG9nKCdzbWFsbCBjYXNlIHVzZXJpZCA9JytoYmxpZCk7XG4gICAgIHRoaXMuaXRlcmF0ZVVzZXJzTWFwKCk7XG4gICAgIFxuICAgIGlmKHRoaXMuaGJsX3VzZXJzLmhhcyhoYmxpZCkgPT09IHRydWUpLy8gaXMgYSB2YWxpZCBIQkwgTW9iaWxlIFVzZXJcbiAgICAgIHtcbiAgICAgIC8vICAgICAgY29uc29sZS5sb2coJ3VzZXIgaXMgcHJlc2VudCA7JytoYmxpZCk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuaGJsX3VzZXJzLmdldChoYmxpZCkuaXNBY2NvdW50TGlua2VkO1xuICAgICAgICAgIFxuICAgICAgfVxuICAgIGVsc2VcbiAgICAgIHJldHVybiAnSW52YWxpZCBVc2VyJztcbiAgIFxuICAgfVxuICBcbiAgc2V0VXNlckxpbmsoSEJMSUQsc3RhdHVzPXRydWUpe1xuICAgIFxuICAgIGxldCBoYmxpZCA9IEhCTElELnRvTG93ZXJDYXNlKCk7XG4gICAgaWYodGhpcy5oYmxfdXNlcnMuaGFzKGhibGlkKSA9PT0gdHJ1ZSkvLyBpcyBhIHZhbGlkIEhCTCBNb2JpbGUgVXNlclxuICAgICAge1xuICAgICAgICBsZXQgdXNlciA9IHRoaXMuaGJsX3VzZXJzLmdldChoYmxpZCk7XG4gICAgICAgIHVzZXIuaXNBY2NvdW50TGlua2VkID0gc3RhdHVzOyAgICAgICAgXG4gICAgICAgIHJldHVybiB0aGlzLmhibF91c2Vycy5zZXQoaGJsaWQsdXNlcik7XG4gICAgICAgICAgXG4gICAgICB9XG4gICAgZWxzZVxuICAgICAgcmV0dXJuICdJbnZhbGlkIFVzZXInO1xuICAgIFxuICAgIFxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gSEJMVXNlcnM7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "HBLUsers.js"
      ],
      "names": [
        "Map",
        "require",
        "HBLUsers",
        "constructor",
        "hbl_users",
        "allowFBaccess",
        "accountBalance",
        "isAccountLinked",
        "iterateUsersMap",
        "console",
        "log",
        "forEach",
        "value",
        "key",
        "isFBAccessAllowedForThisUser",
        "HBLID",
        "hblid",
        "toLowerCase",
        "has",
        "get",
        "getAccountBalance",
        "isUserLinked",
        "setUserLink",
        "status",
        "user",
        "set",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,MAAMC,QAAQ,SAAR,CAAV;;AAIA,MAAMC,QAAN,CAAc;;AAEZC,gBAAc;;AAEZ,SAAKC,SAAL,GAAiB,IAAIJ,GAAJ,CAAQ,CACf,CAAC,QAAD,EAAW,EAACK,eAAc,IAAf,EAAqBC,gBAAe,IAApC,EAAyCC,iBAAiB,KAA1D,EAAX,CADe,EAEf,CAAC,OAAD,EAAW,EAACF,eAAc,IAAf,EAAqBC,gBAAe,IAApC,EAAyCC,iBAAiB,KAA1D,EAAX,CAFe,EAGf,CAAC,QAAD,EAAW,EAACF,eAAc,IAAf,EAAqBC,gBAAe,IAApC,EAAyCC,iBAAiB,KAA1D,EAAX,CAHe,EAIf,CAAC,QAAD,EAAW,EAACF,eAAc,IAAf,EAAqBC,gBAAe,IAApC,EAAyCC,iBAAiB,KAA1D,EAAX,CAJe,EAKf,CAAC,SAAD,EAAY,EAACF,eAAc,KAAf,EAAsBC,gBAAe,IAArC,EAA0CC,iBAAiB,KAA3D,EAAZ,CALe,CAAR,CAAjB;AASF;AACAC,oBAAiB;AACfC,YAAQC,GAAR,CAAY,qBAAZ;;AAEA,SAAKN,SAAL,CAAeO,OAAf,CAAuB,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AACtCJ,cAAQC,GAAR,CAAYG,MAAM,KAAN,GAAcD,KAA1B;AACL,KAFD;AAID;;AAEDE,+BAA6BC,KAA7B,EAAmC;;AAEjC,QAAIC,QAAQD,MAAME,WAAN,EAAZ;;AAEA,QAAG,KAAKb,SAAL,CAAec,GAAf,CAAmBF,KAAnB,MAA8B,IAAjC,EAAsC;AACpC;AACE,YAAG,KAAKZ,SAAL,CAAee,GAAf,CAAmBH,KAAnB,EAA0BX,aAA1B,KAA4C,IAA/C,EAAoD;AAClD,iBAAO,IAAP,CADF,KAGE,OAAO,6BAAP;AACH,OANH,MAQE,OAAO,cAAP;AAGH;;AAEDe,oBAAkBL,KAAlB,EAAwB;;AAErB,QAAIC,QAAQD,MAAME,WAAN,EAAZ;AACA,QAAG,KAAKb,SAAL,CAAec,GAAf,CAAmBF,KAAnB,MAA8B,IAAjC,EAAsC;AACrC;AACE,eAAO,KAAKZ,SAAL,CAAee,GAAf,CAAmBH,KAAnB,EAA0BV,cAAjC;AAED,OAJF,MAMC,OAAO,cAAP;AAEH;;AAGAe,eAAaN,KAAb,EAAmB;;AAElB;AACA,QAAIC,QAAQD,MAAME,WAAN,EAAZ;AACA;AACC,SAAKT,eAAL;;AAED,QAAG,KAAKJ,SAAL,CAAec,GAAf,CAAmBF,KAAnB,MAA8B,IAAjC,EAAsC;AACpC;AACA;;AAEE,eAAO,KAAKZ,SAAL,CAAee,GAAf,CAAmBH,KAAnB,EAA0BT,eAAjC;AAED,OANH,MAQE,OAAO,cAAP;AAEF;;AAEFe,cAAYP,KAAZ,EAAkBQ,SAAO,IAAzB,EAA8B;;AAE5B,QAAIP,QAAQD,MAAME,WAAN,EAAZ;AACA,QAAG,KAAKb,SAAL,CAAec,GAAf,CAAmBF,KAAnB,MAA8B,IAAjC,EAAsC;AACpC;AACE,YAAIQ,OAAO,KAAKpB,SAAL,CAAee,GAAf,CAAmBH,KAAnB,CAAX;AACAQ,aAAKjB,eAAL,GAAuBgB,MAAvB;AACA,eAAO,KAAKnB,SAAL,CAAeqB,GAAf,CAAmBT,KAAnB,EAAyBQ,IAAzB,CAAP;AAED,OANH,MAQE,OAAO,cAAP;AAGH;AAvFW;;AA0FdE,OAAOC,OAAP,GAAiBzB,QAAjB",
      "file": "HBLUsers.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "var Map = require('es6-map');\n\n\n\nclass HBLUsers{\n  \n  constructor() {\n    \n    this.hbl_users = new Map([\n              ['mursil', {allowFBaccess:true, accountBalance:5000,isAccountLinked: false}],\n              ['sanya',  {allowFBaccess:true, accountBalance:1000,isAccountLinked: false}],\n              ['marium', {allowFBaccess:true, accountBalance:1000,isAccountLinked: false}],\n              ['faizan', {allowFBaccess:true, accountBalance:1000,isAccountLinked: false}],\n              ['mehwish', {allowFBaccess:false, accountBalance:3000,isAccountLinked: false}]\n            ]);\n    \n \n }\n  iterateUsersMap(){\n    console.log('iterating users map');\n\n    this.hbl_users.forEach(function(value, key) {\n          console.log(key + ' = ' + value);\n    });\n    \n  }\n  \n  isFBAccessAllowedForThisUser(HBLID){\n    \n    let hblid = HBLID.toLowerCase();\n    \n    if(this.hbl_users.has(hblid) === true)// is a valid HBL Mobile User\n      {\n        if(this.hbl_users.get(hblid).allowFBaccess === true)// Facebook access is also allowed\n          return true;\n        else\n          return 'facebook access not allowed';\n      }\n    else\n      return 'Invalid User';\n    \n      \n  }\n  \n  getAccountBalance(HBLID){\n    \n     let hblid = HBLID.toLowerCase();\n     if(this.hbl_users.has(hblid) === true)// is a valid HBL Mobile User\n      {\n        return this.hbl_users.get(hblid).accountBalance;\n          \n      }\n    else\n      return 'Invalid User';\n    \n  }\n  \n  \n   isUserLinked(HBLID){\n    \n    // console.log('isUserLinked  called with userid ='+HBLID);\n    let hblid = HBLID.toLowerCase();\n    //console.log('small case userid ='+hblid);\n     this.iterateUsersMap();\n     \n    if(this.hbl_users.has(hblid) === true)// is a valid HBL Mobile User\n      {\n      //      console.log('user is present ;'+hblid);\n\n        return this.hbl_users.get(hblid).isAccountLinked;\n          \n      }\n    else\n      return 'Invalid User';\n   \n   }\n  \n  setUserLink(HBLID,status=true){\n    \n    let hblid = HBLID.toLowerCase();\n    if(this.hbl_users.has(hblid) === true)// is a valid HBL Mobile User\n      {\n        let user = this.hbl_users.get(hblid);\n        user.isAccountLinked = status;        \n        return this.hbl_users.set(hblid,user);\n          \n      }\n    else\n      return 'Invalid User';\n    \n    \n  }\n}\n\nmodule.exports = HBLUsers;"
      ]
    },
    "mtime": 1490896818080
  }
}